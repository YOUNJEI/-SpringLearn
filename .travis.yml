language: java
jdk:
  - openjdk11


branches:
  only:
    - master

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "cd spring-learn && ./gradlew clean build && cd .."

before_deploy:
  #- cd spring-learn
  #- zip -r springlearn-springboot-webservice *
  #- mv springlearn-springboot-webservice.zip ../
  #- cd ..
  #- mkdir -p deploy
  #- mv springlearn-springboot-webservice.zip deploy/
  - mkdir -p before-deploy
  - cd spring-learn
  - cp scripts/*.sh ../before-deploy/
  - cp appspec.yml ../before-deploy/
  - cp build/libs/*.jar ../before-deploy/
  - cd ../before-deploy && zip -r before-deploy *
  - cd ../ && mkdir -p deploy
  - mv before-deploy/before-deploy.zip deploy/springlearn-springboot-webservice.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: springlearn-springboot-build # S3 버킷 이름
    region: ap-northeast-2
    skip_cleanup: true
    acl: private  # zip 파일을 private으로
    local_dir: deploy
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key:  $AWS_SECRET_KEY
    bucket: springlearn-springboot-build  # S3 버킷
    key:  springlearn-springboot-webservice.zip # 빌드 파일을 압축해서 전달
    bundle_type:  zip # 압축 확장자
    application:  springlearn-springboot-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: springlearn-springboot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed:  true 

# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - koyj951211@naver.com
